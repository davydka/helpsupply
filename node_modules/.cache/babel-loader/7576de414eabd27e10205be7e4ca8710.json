{"ast":null,"code":"var _jsxFileName = \"/Users/johnson/Dropbox/Coronavirus/hc-v2/hospitalcommunity/src/components/StaffNeedTable.js\";\nimport React from \"react\";\nimport * as needTypes from \"../data/needTypes\";\n\nclass StaffNeedTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let index = needTypes.needTypes.findIndex(x => x.id === this.props.type);\n    let fieldsArray = needTypes.needTypes[index].fields;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-striped staffTable table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, fieldsArray.map((field, i) => {\n      return React.createElement(\"th\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, field.name);\n    }), React.createElement(\"th\", {\n      style: {\n        width: \"150px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.needs.map((need, i) => {\n      if (need.kind === this.props.type && need.status === \"open\") {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, fieldsArray.map((field, i) => {\n          return React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, need[field.id]);\n        }), React.createElement(\"th\", {\n          style: {\n            width: \"150px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-primary hospitalNeedsBtn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Offer to help\")));\n      } else {\n        return \"\";\n      }\n    }), this.props.needs.map((need, i) => {\n      if (need.kind === this.props.type && need.status === \"closed\") {\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, fieldsArray.map((field, i) => {\n          return React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, need[field.id]);\n        }), React.createElement(\"th\", {\n          style: {\n            width: \"150px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          disabled: true,\n          className: \"btn btn-outline-success noHover\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Fulfilled!\")));\n      } else {\n        return \"\";\n      }\n    }))));\n  }\n\n}\n\nexport default StaffNeedTable;","map":{"version":3,"sources":["/Users/johnson/Dropbox/Coronavirus/hc-v2/hospitalcommunity/src/components/StaffNeedTable.js"],"names":["React","needTypes","StaffNeedTable","Component","constructor","props","state","render","index","findIndex","x","id","type","fieldsArray","fields","map","field","i","name","width","needs","need","kind","status"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as needTypes from \"../data/needTypes\";\n\nclass StaffNeedTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let index = needTypes.needTypes.findIndex(x => x.id === this.props.type);\n    let fieldsArray = needTypes.needTypes[index].fields;\n\n    return (\n      <div>\n        <table className=\"table table-striped staffTable table-bordered\">\n          <thead>\n            <tr>\n              {fieldsArray.map((field, i) => {\n                return <th key={i}>{field.name}</th>;\n              })}\n              <th style={{ width: \"150px\" }}>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/*OPEN ISSUES */}\n            {this.props.needs.map((need, i) => {\n              if (need.kind === this.props.type && need.status === \"open\") {\n                return (\n                  <tr>\n                    {fieldsArray.map((field, i) => {\n                      return <th>{need[field.id]}</th>;\n                    })}\n                    <th style={{ width: \"150px\" }}>\n                      <button className=\"btn btn-primary hospitalNeedsBtn\">\n                        Offer to help\n                      </button>\n                    </th>\n                  </tr>\n                );\n              } else {\n                return \"\";\n              }\n            })}\n            {/* CLOSED ISSUES */}\n            {this.props.needs.map((need, i) => {\n              if (need.kind === this.props.type && need.status === \"closed\") {\n                return (\n                  <tr>\n                    {fieldsArray.map((field, i) => {\n                      return <th>{need[field.id]}</th>;\n                    })}\n                    <th style={{ width: \"150px\" }}>\n                      <button\n                        disabled\n                        className=\"btn btn-outline-success noHover\"\n                      >\n                        Fulfilled!\n                      </button>\n                    </th>\n                  </tr>\n                );\n              } else {\n                return \"\";\n              }\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default StaffNeedTable;\n"]},"metadata":{},"sourceType":"module"}