{"ast":null,"code":"var _jsxFileName = \"/Users/johnson/Dropbox/Coronavirus/hospitalcommunity/app/src/components/Hospital.js\";\nimport React from \"react\";\nimport * as hospital_index from \"../data/hospital_index\";\nimport * as needTypes from \"../data/needTypes\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Hospital extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserData = () => {\n      let db = this.props.db;\n      db.collection(\"need\").where(\"location_id\", \"==\", this.props.match.params.id).get().then(snapshot => {\n        let data = snapshot.docs.map(d => {\n          var dict = d.data();\n          dict[\"id\"] = d.id;\n          return dict;\n        });\n        console.log(data);\n        this.setState({\n          needs: data\n        });\n      }).catch(console.log);\n      console.log(this.props.userData.role);\n\n      if (this.props.userData.role === \"mod\") {\n        db.collection(\"documents\").where(\"location_id\", \"==\", this.props.match.params.id).get().then(snapshot => {\n          let data = snapshot.docs.map(d => {\n            var dict = d.data();\n            dict[\"id\"] = d.id;\n            return dict;\n          });\n          console.log(data);\n          this.setState({\n            links: data\n          });\n        }).catch(console.log);\n      } else {\n        db.collection(\"documents\").where(\"location_id\", \"==\", this.props.match.params.id).where(\"published\", \"==\", true).get().then(snapshot => {\n          let data = snapshot.docs.map(d => {\n            var dict = d.data();\n            dict[\"id\"] = d.id;\n            return dict;\n          });\n          console.log(data);\n          this.setState({\n            links: data\n          });\n        }).catch(console.log);\n      }\n    };\n\n    this.writeUserData = (collection, data, title) => {\n      let my = this;\n      let db = this.props.db;\n\n      if (title) {\n        db.collection(collection).doc(title).set(data).then(function () {\n          console.log(\"Document successfully written!\");\n          my.getUserData();\n          my.setState({\n            linkSubmitTextValue: \"\",\n            linkSubmitValue: \"\",\n            confirmation: true,\n            lastLinkSubmitted: data.text,\n            error: \"\"\n          });\n        }).catch(function (error) {\n          console.error(\"Error writing document: \", error);\n        });\n      } else {\n        db.collection(collection).add(data).then(function () {\n          console.log(\"Document successfully written!\");\n          my.getUserData();\n          my.setState({\n            linkSubmitTextValue: \"\",\n            linkSubmitValue: \"\",\n            confirmation: true,\n            lastLinkSubmitted: data.text,\n            error: \"\"\n          });\n        }).catch(function (error) {\n          console.error(\"Error writing document: \", error);\n        });\n      }\n    };\n\n    this.state = {\n      linkSubmitTextValue: \"\",\n      linkSubmitValue: \"\",\n      needs: [],\n      links: [],\n      confirmation: false,\n      lastLinkSubmitted: \"\"\n    };\n    this.handleLinkSubmitChange = this.handleLinkSubmitChange.bind(this);\n    this.handleLinkSubmitTextChange = this.handleLinkSubmitTextChange.bind(this);\n    this.handleLinkSubmit = this.handleLinkSubmit.bind(this);\n    this.getUserData = this.getUserData.bind(this);\n  }\n\n  handleLinkSubmitChange(event) {\n    this.setState({\n      linkSubmitValue: event.target.value\n    });\n  }\n\n  handleLinkSubmitTextChange(event) {\n    this.setState({\n      linkSubmitTextValue: event.target.value\n    });\n  }\n\n  handleLinkSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.linkSubmitValue !== \"\" && this.state.linkSubmitTextValue !== \"\") {\n      console.log(\"Submitting...\" + this.state.linkSubmitValue);\n      this.writeUserData(\"documents\", {\n        kind: \"link\",\n        location_id: \"330101\",\n        text: this.state.linkSubmitTextValue,\n        url: this.state.linkSubmitValue,\n        published: false\n      });\n    } else {\n      this.setState({\n        error: \"You're missing a required field.\"\n      });\n    }\n  }\n\n  handleChange(event) {}\n\n  handleSubmit(event) {}\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  render() {\n    const hospital = hospital_index.index.id_index[this.props.match.params.id];\n    return React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"navbar-brand mb-0 h1\",\n      id: \"hospitalname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, hospital.name), \" in \", hospital.city), React.createElement(\"a\", {\n      href: \"#\",\n      className: \"navbar-brand mb-0 h1 logored\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"hospital.community\")), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panelFull\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, needTypes.documentTypes.map(documentType => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, documentType.name), React.createElement(\"ul\", {\n        className: \"list-group linksList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.state.links.map(link => {\n        if (link.kind === documentType.id) {\n          return React.createElement(\"li\", {\n            className: \"linksListItem\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            id: link.id,\n            href: link.url,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 181\n            },\n            __self: this\n          }, link.text)));\n        } else {\n          return \"\";\n        }\n      })), React.createElement(\"div\", {\n        className: \"linkSubmissionContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        class: \"linkSubmitGroup\",\n        onSubmit: this.handleLinkSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"submitLink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Have something to add?\"), React.createElement(\"input\", {\n        className: \"linkTitle form-control\",\n        id: \"linkTitle\",\n        placeholder: \"i.e. Google Spreadsheet for Equipment\",\n        value: this.state.linkSubmitTextValue,\n        onChange: this.handleLinkSubmitTextChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"linkSubmit form-control\",\n        id: \"linkSubmit\",\n        placeholder: \"https://...\",\n        value: this.state.linkSubmitValue,\n        onChange: this.handleLinkSubmitChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary linkSubmitBtn\",\n        onClick: this.handleLinkSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Submit\")), this.state.confirmation ? React.createElement(\"div\", {\n        id: \"confirmationText\",\n        class: \"confirmationText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, this.state.lastLinkSubmitted, \" submitted for review (we'll be quick)!\") : \"\", this.state.error ? React.createElement(\"div\", {\n        class: \"errorText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, this.state.error) : \"\"));\n    }))), React.createElement(\"div\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Needs\"), React.createElement(\"span\", {\n      className: \"group\",\n      id: \"needslist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, needTypes.needTypes.map(needType => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"group-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, needType.name), React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, this.state.needs.map(need => {\n        if (need.kind === needType.id) {\n          return React.createElement(\"li\", {\n            className: \"list-group-item needoffer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          }, React.createElement(\"b\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249\n            },\n            __self: this\n          }, need.subject)), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251\n            },\n            __self: this\n          }, need.comments));\n        } else {\n          return \"\";\n        }\n      })), React.createElement(\"button\", {\n        className: \"addbutton btn btn-secondary\",\n        onClick: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Add\"));\n    }))), React.createElement(\"div\", {\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Offers for Help\"), React.createElement(\"span\", {\n      className: \"group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, needTypes.offerTypes.map(offerType => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"group-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, offerType.name), React.createElement(\"ul\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"addbutton btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Add\"));\n    })))));\n  }\n\n}\n\nexport default withRouter(Hospital);","map":{"version":3,"sources":["/Users/johnson/Dropbox/Coronavirus/hospitalcommunity/app/src/components/Hospital.js"],"names":["React","hospital_index","needTypes","withRouter","Hospital","Component","constructor","props","getUserData","db","collection","where","match","params","id","get","then","snapshot","data","docs","map","d","dict","console","log","setState","needs","catch","userData","role","links","writeUserData","title","my","doc","set","linkSubmitTextValue","linkSubmitValue","confirmation","lastLinkSubmitted","text","error","add","state","handleLinkSubmitChange","bind","handleLinkSubmitTextChange","handleLinkSubmit","event","target","value","preventDefault","kind","location_id","url","published","handleChange","handleSubmit","componentDidUpdate","componentDidMount","render","hospital","index","id_index","name","city","documentTypes","documentType","link","needType","need","subject","comments","offerTypes","offerType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as hospital_index from \"../data/hospital_index\";\nimport * as needTypes from \"../data/needTypes\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Hospital extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      linkSubmitTextValue: \"\",\n      linkSubmitValue: \"\",\n      needs: [],\n      links: [],\n      confirmation: false,\n      lastLinkSubmitted: \"\"\n    };\n    this.handleLinkSubmitChange = this.handleLinkSubmitChange.bind(this);\n    this.handleLinkSubmitTextChange = this.handleLinkSubmitTextChange.bind(\n      this\n    );\n\n    this.handleLinkSubmit = this.handleLinkSubmit.bind(this);\n    this.getUserData = this.getUserData.bind(this);\n  }\n\n  handleLinkSubmitChange(event) {\n    this.setState({ linkSubmitValue: event.target.value });\n  }\n\n  handleLinkSubmitTextChange(event) {\n    this.setState({ linkSubmitTextValue: event.target.value });\n  }\n\n  handleLinkSubmit(event) {\n    event.preventDefault();\n    if (\n      this.state.linkSubmitValue !== \"\" &&\n      this.state.linkSubmitTextValue !== \"\"\n    ) {\n      console.log(\"Submitting...\" + this.state.linkSubmitValue);\n      this.writeUserData(\"documents\", {\n        kind: \"link\",\n        location_id: \"330101\",\n        text: this.state.linkSubmitTextValue,\n        url: this.state.linkSubmitValue,\n        published: false\n      });\n    } else {\n      this.setState({\n        error: \"You're missing a required field.\"\n      });\n    }\n  }\n\n  getUserData = () => {\n    let db = this.props.db;\n    db.collection(\"need\")\n      .where(\"location_id\", \"==\", this.props.match.params.id)\n      .get()\n      .then(snapshot => {\n        let data = snapshot.docs.map(d => {\n          var dict = d.data();\n          dict[\"id\"] = d.id;\n          return dict;\n        });\n        console.log(data);\n        this.setState({ needs: data });\n      })\n      .catch(console.log);\n    console.log(this.props.userData.role);\n    if (this.props.userData.role === \"mod\") {\n      db.collection(\"documents\")\n        .where(\"location_id\", \"==\", this.props.match.params.id)\n        .get()\n        .then(snapshot => {\n          let data = snapshot.docs.map(d => {\n            var dict = d.data();\n            dict[\"id\"] = d.id;\n            return dict;\n          });\n          console.log(data);\n          this.setState({ links: data });\n        })\n        .catch(console.log);\n    } else {\n      db.collection(\"documents\")\n        .where(\"location_id\", \"==\", this.props.match.params.id)\n        .where(\"published\", \"==\", true)\n        .get()\n        .then(snapshot => {\n          let data = snapshot.docs.map(d => {\n            var dict = d.data();\n            dict[\"id\"] = d.id;\n            return dict;\n          });\n          console.log(data);\n          this.setState({ links: data });\n        })\n        .catch(console.log);\n    }\n  };\n\n  writeUserData = (collection, data, title) => {\n    let my = this;\n    let db = this.props.db;\n\n    if (title) {\n      db.collection(collection)\n        .doc(title)\n        .set(data)\n        .then(function() {\n          console.log(\"Document successfully written!\");\n          my.getUserData();\n          my.setState({\n            linkSubmitTextValue: \"\",\n            linkSubmitValue: \"\",\n            confirmation: true,\n            lastLinkSubmitted: data.text,\n            error: \"\"\n          });\n        })\n        .catch(function(error) {\n          console.error(\"Error writing document: \", error);\n        });\n    } else {\n      db.collection(collection)\n        .add(data)\n        .then(function() {\n          console.log(\"Document successfully written!\");\n          my.getUserData();\n          my.setState({\n            linkSubmitTextValue: \"\",\n            linkSubmitValue: \"\",\n            confirmation: true,\n            lastLinkSubmitted: data.text,\n            error: \"\"\n          });\n        })\n        .catch(function(error) {\n          console.error(\"Error writing document: \", error);\n        });\n    }\n  };\n\n  handleChange(event) {}\n\n  handleSubmit(event) {}\n\n  componentDidUpdate() {}\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  render() {\n    const hospital = hospital_index.index.id_index[this.props.match.params.id];\n\n    return (\n      <div className=\"\">\n        <nav className=\"navbar navbar-light bg-light\">\n          <span className=\"navbar-brand mb-0 h1\" id=\"hospitalname\">\n            <b>{hospital.name}</b> in {hospital.city}\n          </span>\n          <a href=\"#\" className=\"navbar-brand mb-0 h1 logored\">\n            hospital.community\n          </a>\n        </nav>\n        <div className=\"content\">\n          <div className=\"panelFull\">\n            <span className=\"group\">\n              {needTypes.documentTypes.map(documentType => {\n                return (\n                  <div>\n                    <h3>{documentType.name}</h3>\n                    <ul className=\"list-group linksList\">\n                      {this.state.links.map(link => {\n                        if (link.kind === documentType.id) {\n                          return (\n                            <li className=\"linksListItem\">\n                              <a id={link.id} href={link.url}>\n                                <b>{link.text}</b>\n                              </a>\n                            </li>\n                          );\n                        } else {\n                          return \"\";\n                        }\n                      })}\n                    </ul>\n                    <div className=\"linkSubmissionContainer\">\n                      <form\n                        class=\"linkSubmitGroup\"\n                        onSubmit={this.handleLinkSubmit}\n                      >\n                        <div class=\"submitLink\">Have something to add?</div>\n                        <input\n                          className=\"linkTitle form-control\"\n                          id=\"linkTitle\"\n                          placeholder=\"i.e. Google Spreadsheet for Equipment\"\n                          value={this.state.linkSubmitTextValue}\n                          onChange={this.handleLinkSubmitTextChange}\n                        />\n                        <input\n                          className=\"linkSubmit form-control\"\n                          id=\"linkSubmit\"\n                          placeholder=\"https://...\"\n                          value={this.state.linkSubmitValue}\n                          onChange={this.handleLinkSubmitChange}\n                        />\n                        <button\n                          className=\"btn btn-primary linkSubmitBtn\"\n                          onClick={this.handleLinkSubmit}\n                        >\n                          Submit\n                        </button>\n                      </form>\n                      {this.state.confirmation ? (\n                        <div id=\"confirmationText\" class=\"confirmationText\">\n                          {this.state.lastLinkSubmitted} submitted for review\n                          (we'll be quick)!\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n                      {this.state.error ? (\n                        <div class=\"errorText\">{this.state.error}</div>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </span>\n          </div>\n          <div className=\"panel\">\n            <h3>Needs</h3>\n            <span className=\"group\" id=\"needslist\">\n              {needTypes.needTypes.map(needType => {\n                return (\n                  <div>\n                    <h3 className=\"group-label\">{needType.name}</h3>\n                    <ul className=\"list-group\">\n                      {this.state.needs.map(need => {\n                        if (need.kind === needType.id) {\n                          return (\n                            <li className=\"list-group-item needoffer\">\n                              <div>\n                                <b>{need.subject}</b>\n                              </div>\n                              <div>{need.comments}</div>\n                            </li>\n                          );\n                        } else {\n                          return \"\";\n                        }\n                      })}\n                    </ul>\n                    <button className=\"addbutton btn btn-secondary\" onClick=\"\">\n                      Add\n                    </button>\n                  </div>\n                );\n              })}\n            </span>\n          </div>\n          <div className=\"panel\">\n            <h3>Offers for Help</h3>\n            <span className=\"group\">\n              {needTypes.offerTypes.map(offerType => {\n                return (\n                  <div>\n                    <h3 className=\"group-label\">{offerType.name}</h3>\n                    <ul className=\"list-group\"></ul>\n                    <button className=\"addbutton btn btn-secondary\">Add</button>\n                  </div>\n                );\n              })}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Hospital);\n"]},"metadata":{},"sourceType":"module"}