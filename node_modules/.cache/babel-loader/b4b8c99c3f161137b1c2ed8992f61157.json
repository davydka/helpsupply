{"ast":null,"code":"var _jsxFileName = \"/Users/johnson/Dropbox/Coronavirus/hospitalcommunity/src/components/EntryPortal.js\";\nimport React from \"react\";\nimport * as tools from \"../functions\";\nimport * as hospital_index from \"../data/hospital_index\";\nimport HospitalResult from \"./HospitalResult\";\nimport { withRouter } from \"react-router-dom\";\n\nclass EntryPortal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\",\n      results: [],\n      selectedResult: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelectHospital = this.handleSelectHospital.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n  } // for user input\n\n\n  handleChange(event) {\n    this.setState({\n      userInput: event.target.value\n    });\n\n    if (event.target.value.length > 1) {\n      let term = event.target.value.toUpperCase();\n      const searchResults = tools.updateSearch(hospital_index.index, term);\n      this.setState({\n        results: searchResults\n      });\n    }\n  } // for mouse overs and keyboard\n\n\n  handleKeyPress(event) {\n    if (event.key === \"ArrowDown\") {\n      if (this.state.results.length > 0) {\n        event.preventDefault();\n        var index = this.state.results.map(function (e) {\n          return e.id;\n        }).indexOf(this.state.selectedResult);\n\n        if (index < this.state.results.length - 1) {\n          this.setState({\n            selectedResult: this.state.results[index + 1].id\n          });\n        }\n      }\n    }\n\n    if (event.key === \"ArrowUp\") {\n      if (this.state.results.length > 0) {\n        event.preventDefault();\n        var index = this.state.results.map(function (e) {\n          return e.id;\n        }).indexOf(this.state.selectedResult);\n\n        if (index > 0) {\n          this.setState({\n            selectedResult: this.state.results[index - 1].id\n          });\n        }\n      }\n    }\n  }\n\n  handleSelectHospital(id) {\n    this.setState({\n      selectedResult: id\n    });\n  } // for going to hospital page\n\n\n  handleSubmit(event) {\n    // this prevents the page from reloading when form is submitted\n    event.preventDefault();\n\n    if (this.state.selectedResult !== \"\") {\n      this.handleRedirect();\n    }\n  }\n\n  handleRedirect() {\n    if (this.state.selectedResult !== \"\") {\n      let url = \"/hospital/\" + this.state.selectedResult;\n      this.props.history.push(url);\n    }\n  }\n\n  componentDidUpdate() {}\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"entryportal container-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"logored\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"hospital.community\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Supporting our heroes on the front lines of COVID-19\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Hospitals and the people who staff them need our help with\", \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"supplies, childcare and moral support\"), \". Search below to find your local hospital and find out how to seek or provide help.\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"searchterm\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Enter your City or Hospital Name\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"searchterm\",\n      placeholder: \"i.e. New York or Zuckerberg\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      onKeyDown: this.handleKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      id: \"searchresults\",\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.results.map(result => {\n      let selected = this.state.selectedResult === result.id;\n      return React.createElement(HospitalResult, {\n        key: result.id,\n        hospital: result.hospital,\n        id: result.id,\n        selectedResult: selected,\n        handleSelectHospital: this.handleSelectHospital,\n        handleRedirect: this.handleRedirect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    }))), React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"logored\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"hospital.community\"), \" is a volunteer project put together by a global team of volunteers.\"));\n  }\n\n}\n\nexport default withRouter(EntryPortal);","map":{"version":3,"sources":["/Users/johnson/Dropbox/Coronavirus/hospitalcommunity/src/components/EntryPortal.js"],"names":["React","tools","hospital_index","HospitalResult","withRouter","EntryPortal","Component","constructor","props","state","userInput","results","selectedResult","handleChange","bind","handleSubmit","handleSelectHospital","handleKeyPress","handleRedirect","event","setState","target","value","length","term","toUpperCase","searchResults","updateSearch","index","key","preventDefault","map","e","id","indexOf","url","history","push","componentDidUpdate","componentDidMount","render","fontWeight","result","selected","hospital"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB;AACA,OAAO,KAAKC,cAAZ,MAAgC,wBAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKI,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAtB;AACD,GAbuC,CAexC;;;AACAD,EAAAA,YAAY,CAACM,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAAEV,MAAAA,SAAS,EAAES,KAAK,CAACE,MAAN,CAAaC;AAA1B,KAAd;;AACA,QAAIH,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,UAAIC,IAAI,GAAGL,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBG,WAAnB,EAAX;AACA,YAAMC,aAAa,GAAGzB,KAAK,CAAC0B,YAAN,CAAmBzB,cAAc,CAAC0B,KAAlC,EAAyCJ,IAAzC,CAAtB;AACA,WAAKJ,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAEe;AAAX,OAAd;AACD;AACF,GAvBuC,CAyBxC;;;AACAT,EAAAA,cAAc,CAACE,KAAD,EAAQ;AACpB,QAAIA,KAAK,CAACU,GAAN,KAAc,WAAlB,EAA+B;AAC7B,UAAI,KAAKpB,KAAL,CAAWE,OAAX,CAAmBY,MAAnB,GAA4B,CAAhC,EAAmC;AACjCJ,QAAAA,KAAK,CAACW,cAAN;AACA,YAAIF,KAAK,GAAG,KAAKnB,KAAL,CAAWE,OAAX,CACToB,GADS,CACL,UAASC,CAAT,EAAY;AACf,iBAAOA,CAAC,CAACC,EAAT;AACD,SAHS,EAITC,OAJS,CAID,KAAKzB,KAAL,CAAWG,cAJV,CAAZ;;AAKA,YAAIgB,KAAK,GAAG,KAAKnB,KAAL,CAAWE,OAAX,CAAmBY,MAAnB,GAA4B,CAAxC,EAA2C;AACzC,eAAKH,QAAL,CAAc;AACZR,YAAAA,cAAc,EAAE,KAAKH,KAAL,CAAWE,OAAX,CAAmBiB,KAAK,GAAG,CAA3B,EAA8BK;AADlC,WAAd;AAGD;AACF;AACF;;AACD,QAAId,KAAK,CAACU,GAAN,KAAc,SAAlB,EAA6B;AAC3B,UAAI,KAAKpB,KAAL,CAAWE,OAAX,CAAmBY,MAAnB,GAA4B,CAAhC,EAAmC;AACjCJ,QAAAA,KAAK,CAACW,cAAN;AACA,YAAIF,KAAK,GAAG,KAAKnB,KAAL,CAAWE,OAAX,CACToB,GADS,CACL,UAASC,CAAT,EAAY;AACf,iBAAOA,CAAC,CAACC,EAAT;AACD,SAHS,EAITC,OAJS,CAID,KAAKzB,KAAL,CAAWG,cAJV,CAAZ;;AAKA,YAAIgB,KAAK,GAAG,CAAZ,EAAe;AACb,eAAKR,QAAL,CAAc;AACZR,YAAAA,cAAc,EAAE,KAAKH,KAAL,CAAWE,OAAX,CAAmBiB,KAAK,GAAG,CAA3B,EAA8BK;AADlC,WAAd;AAGD;AACF;AACF;AACF;;AAEDjB,EAAAA,oBAAoB,CAACiB,EAAD,EAAK;AACvB,SAAKb,QAAL,CAAc;AAAER,MAAAA,cAAc,EAAEqB;AAAlB,KAAd;AACD,GA7DuC,CA+DxC;;;AACAlB,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAClB;AACAA,IAAAA,KAAK,CAACW,cAAN;;AACA,QAAI,KAAKrB,KAAL,CAAWG,cAAX,KAA8B,EAAlC,EAAsC;AACpC,WAAKM,cAAL;AACD;AACF;;AACDA,EAAAA,cAAc,GAAG;AACf,QAAI,KAAKT,KAAL,CAAWG,cAAX,KAA8B,EAAlC,EAAsC;AACpC,UAAIuB,GAAG,GAAG,eAAe,KAAK1B,KAAL,CAAWG,cAApC;AACA,WAAKJ,KAAL,CAAW4B,OAAX,CAAmBC,IAAnB,CAAwBF,GAAxB;AACD;AACF;;AAEDG,EAAAA,kBAAkB,GAAG,CAAE;;AAEvBC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAC6D,GAD7D,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAFF,yFAHF,EAQE;AAAM,MAAA,QAAQ,EAAE,KAAKzB,YAArB;AAAmC,MAAA,YAAY,EAAC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE;AAAE0B,QAAAA,UAAU,EAAE;AAAd,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,EAIE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,EAAE,EAAC,YAFL;AAGE,MAAA,WAAW,EAAC,6BAHd;AAIE,MAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWa,KAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKT,YALjB;AAME,MAAA,SAAS,EAAE,KAAKI,cANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,EAcE;AAAI,MAAA,EAAE,EAAC,eAAP;AAAuB,MAAA,SAAS,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWE,OAAX,CAAmBoB,GAAnB,CAAuBW,MAAM,IAAI;AAChC,UAAIC,QAAQ,GAAG,KAAKlC,KAAL,CAAWG,cAAX,KAA8B8B,MAAM,CAACT,EAApD;AACA,aACE,oBAAC,cAAD;AACE,QAAA,GAAG,EAAES,MAAM,CAACT,EADd;AAEE,QAAA,QAAQ,EAAES,MAAM,CAACE,QAFnB;AAGE,QAAA,EAAE,EAAEF,MAAM,CAACT,EAHb;AAIE,QAAA,cAAc,EAAEU,QAJlB;AAKE,QAAA,oBAAoB,EAAE,KAAK3B,oBAL7B;AAME,QAAA,cAAc,EAAE,KAAKE,cANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAZA,CADH,CAdF,CARF,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,yEAtCF,CADF;AA6CD;;AAhIuC;;AAmI1C,eAAed,UAAU,CAACC,WAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport * as tools from \"../functions\";\nimport * as hospital_index from \"../data/hospital_index\";\nimport HospitalResult from \"./HospitalResult\";\nimport { withRouter } from \"react-router-dom\";\n\nclass EntryPortal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\",\n      results: [],\n      selectedResult: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelectHospital = this.handleSelectHospital.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleRedirect = this.handleRedirect.bind(this);\n  }\n\n  // for user input\n  handleChange(event) {\n    this.setState({ userInput: event.target.value });\n    if (event.target.value.length > 1) {\n      let term = event.target.value.toUpperCase();\n      const searchResults = tools.updateSearch(hospital_index.index, term);\n      this.setState({ results: searchResults });\n    }\n  }\n\n  // for mouse overs and keyboard\n  handleKeyPress(event) {\n    if (event.key === \"ArrowDown\") {\n      if (this.state.results.length > 0) {\n        event.preventDefault();\n        var index = this.state.results\n          .map(function(e) {\n            return e.id;\n          })\n          .indexOf(this.state.selectedResult);\n        if (index < this.state.results.length - 1) {\n          this.setState({\n            selectedResult: this.state.results[index + 1].id\n          });\n        }\n      }\n    }\n    if (event.key === \"ArrowUp\") {\n      if (this.state.results.length > 0) {\n        event.preventDefault();\n        var index = this.state.results\n          .map(function(e) {\n            return e.id;\n          })\n          .indexOf(this.state.selectedResult);\n        if (index > 0) {\n          this.setState({\n            selectedResult: this.state.results[index - 1].id\n          });\n        }\n      }\n    }\n  }\n\n  handleSelectHospital(id) {\n    this.setState({ selectedResult: id });\n  }\n\n  // for going to hospital page\n  handleSubmit(event) {\n    // this prevents the page from reloading when form is submitted\n    event.preventDefault();\n    if (this.state.selectedResult !== \"\") {\n      this.handleRedirect();\n    }\n  }\n  handleRedirect() {\n    if (this.state.selectedResult !== \"\") {\n      let url = \"/hospital/\" + this.state.selectedResult;\n      this.props.history.push(url);\n    }\n  }\n\n  componentDidUpdate() {}\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"entryportal container-sm\">\n        <h3 className=\"logored\">hospital.community</h3>\n        <h2>Supporting our heroes on the front lines of COVID-19</h2>\n        <p>\n          Hospitals and the people who staff them need our help with{\" \"}\n          <b>supplies, childcare and moral support</b>. Search below to find\n          your local hospital and find out how to seek or provide help.\n        </p>\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n          <div className=\"form-group\">\n            <label htmlFor=\"searchterm\" style={{ fontWeight: \"bold\" }}>\n              Enter your City or Hospital Name\n            </label>\n            <input\n              className=\"form-control\"\n              id=\"searchterm\"\n              placeholder=\"i.e. New York or Zuckerberg\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              onKeyDown={this.handleKeyPress}\n            />\n          </div>\n          <ul id=\"searchresults\" className=\"list-group\">\n            {this.state.results.map(result => {\n              let selected = this.state.selectedResult === result.id;\n              return (\n                <HospitalResult\n                  key={result.id}\n                  hospital={result.hospital}\n                  id={result.id}\n                  selectedResult={selected}\n                  handleSelectHospital={this.handleSelectHospital}\n                  handleRedirect={this.handleRedirect}\n                />\n              );\n            })}\n          </ul>\n        </form>\n        <center>\n          <span className=\"logored\">hospital.community</span> is a volunteer\n          project put together by a global team of volunteers.\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(EntryPortal);\n"]},"metadata":{},"sourceType":"module"}